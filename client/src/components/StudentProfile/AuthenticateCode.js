import React, { useState, useEffect } from "react";
import { match } from "../CompareImage";
import CompareImage from "../CompareImage";

let studentdata;

const AuthenticateCode = () => {
  const [classCode, setClassCode] = useState({
    subject: "",
    code: "",
  });
  const [compare, setCompare] = useState(false);
  const [validated, setValidated] = useState("");
  const [attendanceMarked, setAttendanceMarked] = useState(undefined);
  const [alert, setAlert] = useState(true);

  useEffect(() => {
    const setData = async () => {
      studentdata = await JSON.parse(localStorage.getItem("student"));
    };
    setData();
  }, []);

  // hiding alert message after 3 seconds
  useEffect(() => {
    setTimeout(() => {
      setAlert(false);
    }, 3000);
  }, [alert]);

  let name,
    value,
    codeEntered = "",
    subjectEntered = "";

  const handleInput = (e) => {
    e.preventDefault();
    name = e.target.name;
    value = e.target.value;

    setClassCode({ ...classCode, [name]: value });
  };

  // detect and compare student face to mark attendance

  const compareImage = () => {
    if (
      compare === false &&
      (classCode.code === "" || classCode.subject === "")
    ) {
      console.log("no details");
      setValidated(false);
    } else {
      if (compare === false) {
        validateCode();
      } else if (compare === true) {
        setCompare(!compare);
      }
      if (match !== "") {
        markAttendance();
      }
    }
  };

  // validate subject and code entered by student with that generated by faculty

  const validateCode = async () => {
    const date = new Date().toISOString().slice(0, 10);
    const time = new Date().getTime() / (1000 * 60);

    subjectEntered = classCode.subject;
    codeEntered = classCode.code;

    const resp = await fetch("/validateCode", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        subjectEntered,
        codeEntered,
        date,
        time,
      }),
    });

    const validation = await resp.json();

    if (validation.message === "Code validated") {
      setCompare(!compare);
    } else {
      setValidated(validation.message);
      setAlert(true);
    }
  };

  // mark attendance after code has been validated

  const markAttendance = async () => {
    const student_name = studentdata.name;
    const student_department = studentdata.department;
    const date = new Date().toISOString().slice(0, 10);
    const student_enrollment_no = studentdata.enrollment_no;
    const subject_name = classCode.subject;
    const attendance_time = new Date().toLocaleTimeString();

    const response = await fetch("/markAttendance", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        student_name,
        student_department,
        date,
        student_enrollment_no,
        subject_name,
        attendance_time,
      }),
    });

    const attendance_marked = await response.json();

    if (attendance_marked.message === "attendance marked") {
      setAttendanceMarked(true);
      classCode.subject = "";
      classCode.code = "";
    } else {
      setAttendanceMarked(false);
      setAlert(true);
      classCode.subject = "";
      classCode.code = "";
    }
  };
  return (
    <>
      <svg xmlns="http://www.w3.org/2000/svg" style={{ display: "none" }}>
        <symbol id="check-circle-fill" fill="currentColor" viewBox="0 0 16 16">
          <path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z" />
        </symbol>
        <symbol
          id="exclamation-triangle-fill"
          fill="currentColor"
          viewBox="0 0 16 16"
        >
          <path d="M8.982 1.566a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566zM8 5c.535 0 .954.462.9.995l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995A.905.905 0 0 1 8 5zm.002 6a1 1 0 1 1 0 2 1 1 0 0 1 0-2z" />
        </symbol>
      </svg>
      <div style={{ marginTop: "3rem" }}>
        {compare && <CompareImage handleClose={compareImage} />}
        {match !== "" && (
          <div
            className="alert alert-success"
            style={{ marginLeft: "350px", marginRight: "5rem" }}
            role="alert"
          >
            <svg
              className="bi flex-shrink-0 me-2"
              width="24"
              height="24"
              role="img"
              aria-label="Success:"
            >
              <use xlinkHref="#check-circle-fill" />
            </svg>
            Attendance marked successfully
          </div>
        )}
        {alert && validated.length !== 0 && (
          <div
            className="alert alert-danger d-flex align-items-center"
            role="alert"
            style={{ marginLeft: "350px", marginRight: "5rem" }}
          >
            <svg
              className="bi flex-shrink-0 me-2"
              width="24"
              height="24"
              role="img"
              aria-label="Danger:"
            >
              <use xlinkHref="#exclamation-triangle-fill" />
            </svg>
            <div>{validated}</div>
          </div>
        )}
        {alert && attendanceMarked === false && (
          <div
            className="alert alert-danger d-flex align-items-center"
            role="alert"
            style={{ marginLeft: "350px", marginRight: "5rem" }}
          >
            <svg
              className="bi flex-shrink-0 me-2"
              width="24"
              height="24"
              role="img"
              aria-label="Danger:"
            >
              <use xlinkHref="#exclamation-triangle-fill" />
            </svg>
            <div>Failed to mark Attendance</div>
          </div>
        )}
      </div>
      <div
        className="mainClass"
        style={{ marginLeft: "350px", marginTop: "3rem",width:'60%' }}
      >
        <h2 style={{ fontWeight: "bolder",textAlign:'center' }}>Authenticate Code</h2>
        <div className="subClass">
          <div style={{ marginRight: "2rem", width: "50%" }}>
            <input
              id="subject"
              name="subject"
              placeholder="Enter subject"
              autoComplete="off"
              type="text"
              value={classCode.subject}
              onChange={handleInput}
              className="codeInput"
            />
            <input
              id="code"
              name="code"
              className="codeInput"
              placeholder="Enter Code"
              autoComplete="off"
              type="text"
              value={classCode.code}
              onChange={handleInput}
            />
          </div>
          <div>
            <p style={{ fontWeight: "bold" }}>
              DEAR STUDENT, PLEASE ENTER THE AUTHENTICATION CODE TO MARK
              ATTENDANCE !
            </p>
          </div>
        </div>
        <div style={{ marginTop: "1rem" }}>
          <input
            style={{ padding: "3px", border: "none",textAlign:'center' }}
            type="submit"
            onClick={compareImage}
            value="Submit"
          />
        </div>
      </div>
    </>
  );
};

export default AuthenticateCode;
